Context,Module,Type,Name,Responsibility,Dependency,PerformanceNote,NamingRationale
"Cung cấp các phương pháp xử lý dữ liệu",storage,Function,scan,"Hàm cốt lõi, đọc một Packet từ một buffer. Đóng vai trò là lớp bao bọc mỏng cho glimpse::Parser.","glimpse::Parser",Hiệu suất phụ thuộc hoàn toàn vào glimpse::Parser. Zero-copy. ,"Tên 'scan' (quét) mô tả hành động đọc và phân tích một vùng dữ liệu."
"Cung cấp các phương pháp xử lý dữ liệu",storage,Function,batch,"Xử lý song song một buffer lớn (thường từ mmap) bằng cách chia thành các khối và xử lý đồng thời với Rayon.","rayon; glimpse::Parser",Hiệu suất cao nhất cho việc xử lý toàn bộ dữ liệu nhờ tận dụng đa lõi. ,"Tên 'batch' (lô) thể hiện việc xử lý toàn bộ dữ liệu như một khối lớn."
"Cung cấp các phương pháp xử lý dữ liệu",storage,Function,stream,"Tạo ra một bộ xử lý streaming (glimpse::Processor) từ một nguồn I/O (Read).","glimpse::Processor; std::io::Read",Linh hoạt, phù hợp với các nguồn dữ liệu không xác định kích thước, nhưng có chi phí (overhead) cao hơn so với `batch` do quản lý buffer và trạng thái. ,"Tên 'stream' mô tả việc tạo ra một luồng xử lý dữ liệu liên tục."
"Ví dụ và kiểm thử",storage,File,examples/main.rs,"Cung cấp ví dụ thực tế về cách sử dụng các hàm `scan`, `batch`, và `stream`.","storage::{scan, batch, stream}",Không ảnh hưởng hiệu suất thư viện. ,"Theo quy ước của Cargo, đây là nơi chứa mã ví dụ."
"Ví dụ và kiểm thử",storage,File,benches/storage_benchmarks.rs,"Chứa các bài benchmark để đo lường và so sánh hiệu năng của ba phương pháp xử lý (`scan`, `batch`, `stream`).","criterion; storage::{scan, batch, stream}",Cung cấp dữ liệu hiệu năng thực tế, là cơ sở cho các quyết định tối ưu. ,"Theo quy ước của Cargo, đây là nơi chứa mã benchmark." 